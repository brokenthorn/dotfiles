# Add and/or configure language servers

# Defaults for languages.toml:
# https://github.com/helix-editor/helix/blob/master/languages.toml

[language-server.rust-analyzer.config]
cargo = { buildScripts = { enable = true }, features = ["ssr"] }
check = { features = ["ssr"] }
procMacro = { enable = true }

[language-server.sql-language-server]
command = "sql-language-server"
args = ["up", "--method", "stdio"]

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]
[language-server.eslint.config]
validate = "on"
run = "onType"
format = { enable = true }
nodePath = ""
rulesCustomizations = []
experimental = {}
problems = { shortenToSingleLine = false }
[language-server.eslint.config.codeAction]
disableRuleComment = { enable = false, location = "separateLine" }
showDocumentation = { enable = true }
[language-server.eslint.config.codeActionsOnSave]
mode = "all"

# Language configs

[[language]]
name = "sql"
language-servers = [ "sql-language-server" ]

# TypeScript and JavaScript

[[language]]
name = "typescript"
language-servers = [
  # will use eslint for linting and formatting (passed down to prettier)
  { name = "typescript-language-server", except-features = [ "format" ] },
  "eslint",
]
# formatter = { command = "prettier", args = [ "--stdin-filepath" ] }
roots = ["package-lock.json", "tsconfig.json", ".prettierrc.json"]
workspace-lsp-roots = ["AccessCareRosteringFrontEnd"]

[[language]]
name = "javascript"
language-servers = [
  # will use eslint for linting and formatting (passed down to prettier)
  { name = "typescript-language-server", except-features = [ "format" ] },
  "eslint",
]
# formatter = { command = "prettier", args = [ "--stdin-filepath" ] }
roots = ["package-lock.json", "tsconfig.json", ".prettierrc.json"]
workspace-lsp-roots = ["AccessCareRosteringFrontEnd"]

# TSX and JSX

[[language]]
name = "tsx"
language-servers = [
  # will use eslint for linting and formatting (passed down to prettier)
  { name = "typescript-language-server", except-features = [ "format" ] },
  "eslint",
]
# formatter = { command = "prettier", args = [ "--stdin-filepath" ] }
roots = ["package-lock.json", "tsconfig.json", ".prettierrc.json"]
workspace-lsp-roots = ["AccessCareRosteringFrontEnd"]

[[language]]
name = "jsx"
language-servers = [
  # will use eslint for linting and formatting (passed down to prettier)
  { name = "typescript-language-server", except-features = [ "format" ] },
  "eslint",
]
# formatter = { command = "prettier", args = [ "--stdin-filepath" ] }
roots = ["package-lock.json", "tsconfig.json", ".prettierrc.json"]
workspace-lsp-roots = ["AccessCareRosteringFrontEnd"]

# Other languages

[[language]]
name = "json"
formatter = { command = "prettier", args = [ "--stdin-filepath" ] }

[[language]]
name = "html"
language-servers = [ "vscode-html-language-server" ]
formatter = { command = "prettier", args = [ "--stdin-filepath" ] }

[[language]]
name = "css"
language-servers = [ "vscode-css-language-server" ]
formatter = { command = "prettier", args = [ "--stdin-filepath" ] }
